{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\ude80 CriblUtilities CriblUtilities is a Python CLI package that streamlines migration to Cribl Stream and validates configurations. With minimal setup, it transfers configurations from existing tools to Cribl Stream. It also integrates with Cribl GitOps workflows to verify naming conventions and file formats before implementing changes. \ud83e\udef6 Functionality Function Explanation Setup Setup your CriblUtilities environment Migrate Migrate database Check Check file format adherence Check Check naming convention with regex More information on CLI-Docs documentation. \ud83d\udee0 Pre requisites migrate use cases Create a local Cribl user. This user should minimally have the role: stream_editor. \u26a0\ufe0f Disclaimer This project is an independent initiative and is not affiliated, endorsed, or sponsored by Cribl. All trademarks and logos mentioned are the property of their respective owners. Please use this software responsibly and at your own risk. \ud83d\udce5 Usage PyPY brew install pipx pipx install cribl-utilities cribl-utilities --help Link to package on PyPI . \ud83d\udcaa Development cd cribl-utilities 'pipx install -e .' Run example usage without installing the package Make sure to have installed a python version >=3.13, and have docker installed. pip install -r requirements.txt Example code without cli: cd cribl-utilities docker compose up -d login and update admin password (default is admin and admin ) python example_usage_without_cli.py Cleanup: docker compose down To serve the docs mkdocs serve To run unit tests docker compose up -d pip install -r requirements.txt cd cribl-utilities pytest Cleanup: docker compose down Typer (cli) related Unix (macOS, Linux) brew install pipx sudo pipx ensurepath --global (this is to allow --global options) pipx install poetry poetry config virtualenvs.in-project true (this makes all venvs in the project) Windows Open PowerShell as administrator pip install pipx pipx ensurepath Close PowerShell and open a new one pipx install poetry poetry config virtualenvs.in-project true (this makes all venvs in the project) cribl-utilities CLI poetry new cribl-utilities cd cribl-utilities poetry add typer poetry shell poetry build poetry install typer cribl_utilities.main utils docs --output docs/cli-docs.md --name cribl-utilities \ud83d\udcbb Compilation of a new release Build and publish CLI make sure to have pipx and poetry installed and to be in the folder of the CLI itself poetry shell poetry build poetry config http-basic.pypi <username> <password> (run once) poetry publish --build","title":"Home"},{"location":"#criblutilities","text":"CriblUtilities is a Python CLI package that streamlines migration to Cribl Stream and validates configurations. With minimal setup, it transfers configurations from existing tools to Cribl Stream. It also integrates with Cribl GitOps workflows to verify naming conventions and file formats before implementing changes.","title":"\ud83d\ude80 CriblUtilities"},{"location":"#functionality","text":"Function Explanation Setup Setup your CriblUtilities environment Migrate Migrate database Check Check file format adherence Check Check naming convention with regex More information on CLI-Docs documentation.","title":"\ud83e\udef6 Functionality"},{"location":"#pre-requisites-migrate-use-cases","text":"Create a local Cribl user. This user should minimally have the role: stream_editor.","title":"\ud83d\udee0 Pre requisites migrate use cases"},{"location":"#disclaimer","text":"This project is an independent initiative and is not affiliated, endorsed, or sponsored by Cribl. All trademarks and logos mentioned are the property of their respective owners. Please use this software responsibly and at your own risk.","title":"\u26a0\ufe0f Disclaimer"},{"location":"#usage","text":"","title":"\ud83d\udce5 Usage"},{"location":"#pypy","text":"brew install pipx pipx install cribl-utilities cribl-utilities --help Link to package on PyPI .","title":"PyPY"},{"location":"#development","text":"cd cribl-utilities 'pipx install -e .'","title":"\ud83d\udcaa Development"},{"location":"#run-example-usage-without-installing-the-package","text":"Make sure to have installed a python version >=3.13, and have docker installed. pip install -r requirements.txt Example code without cli: cd cribl-utilities docker compose up -d login and update admin password (default is admin and admin ) python example_usage_without_cli.py Cleanup: docker compose down","title":"Run example usage without installing the package"},{"location":"#to-serve-the-docs","text":"mkdocs serve","title":"To serve the docs"},{"location":"#to-run-unit-tests","text":"docker compose up -d pip install -r requirements.txt cd cribl-utilities pytest Cleanup: docker compose down","title":"To run unit tests"},{"location":"#typer-cli-related","text":"","title":"Typer (cli) related"},{"location":"#unix-macos-linux","text":"brew install pipx sudo pipx ensurepath --global (this is to allow --global options) pipx install poetry poetry config virtualenvs.in-project true (this makes all venvs in the project)","title":"Unix (macOS, Linux)"},{"location":"#windows","text":"Open PowerShell as administrator pip install pipx pipx ensurepath Close PowerShell and open a new one pipx install poetry poetry config virtualenvs.in-project true (this makes all venvs in the project)","title":"Windows"},{"location":"#cribl-utilities-cli","text":"poetry new cribl-utilities cd cribl-utilities poetry add typer poetry shell poetry build poetry install typer cribl_utilities.main utils docs --output docs/cli-docs.md --name cribl-utilities","title":"cribl-utilities CLI"},{"location":"#compilation-of-a-new-release","text":"","title":"\ud83d\udcbb Compilation of a new release"},{"location":"#build-and-publish-cli","text":"make sure to have pipx and poetry installed and to be in the folder of the CLI itself poetry shell poetry build poetry config http-basic.pypi <username> <password> (run once) poetry publish --build","title":"Build and publish CLI"},{"location":"Mapping%20API%20Cribl/","text":"API Inputs This table shows the information sent with each field in the API Inputs call. db_inputs is left joined to db_connections with the connection field from db_inputs and the key name of the db_connections entries. API Inputs field db_inputs.conf db_connections.conf Fill in value type \"collection\" authType* schedule.cronSchedule interval schedule.run.mode mode schedule.enabled* disabled collector.conf.connectionId connection collector.conf.query query collector.type \"database\" input.type \"collection\" input.metadata[0].name \u201chost\u201d input.metadata[0].value host input.metadata[1].name \u201cindex\u201d input.metadata[1].value index input.metadata[2].name \u201csource\u201d input.metadata[2].value source input.metadata[3].name \u201csourcetype\u201d input.metadata[3].value sourcetype id [....]+unique code not sent values from inputs.conf: index_time_mode max_rows API Connections This table shows the information sent with each field in the API Connections call. db_connections is left joined to identities with the identity field from db_connections and the key name of identities API Connections Field db_connections.conf identities.conf id [...]+unique code databaseType* connection_type username username password password connectionString* customizedJdbcUrl database database disabled disabled host host identity identity jdbcUseSSL jdbcUseSSL localTimezoneConversionEnabled localTimezoneConversionEnabled port port readonly None timezone None authType If connection_type=mssql_jdts_win_auth fill this with configObj else fill with connectionString. schedule.enabled Because Splunk talks about disabled and Cribl about enabled the states need to be transformed to the opposite value. Cribl only allows true or false booleans where Splunk allows 0 and 1 numbers as well; these need to be transformed. From To true false false true 1 false 0 true databaseType Cribl allowed values: mysql, oracle, postgres, sqlserver From To oracle_service oracle oracle oracle mssql_jtds_win_auth sqlserver generic_mssql sqlserver db2 -not supported yet- postgres postgres sybase_ase -not supported yet- vertica -not supported yet- for -not supported yet- throw an error. connectionString If available this should be filled with customizedJdbcUrl contents. If not available this needs to be drafted using parameters (in curly brackets) available: jdbc:{connection_type}://{host}:{post};encrypt={jdbcUseSSL};user={username};password={password}; If connection_type=mssql_jdts_win_auth fill configObj in stead of connectionString with the following: { \"authentication\": { \"type\": \"ntlm\", \"options\": { \"userName\": \"{username}\", \"password\": \"{password}\", \"domain\": \"{domain}\" } }, \"options\": { \"connectTimeout\": 15000, \"trustServerCertificate\": true }, \"connectionTimeout\": 15000, \"port\": {port}, \"server\": \"{url}\", \"database\": \"{databasename}\" }","title":"Mapping"},{"location":"Mapping%20API%20Cribl/#_1","text":"","title":""},{"location":"Mapping%20API%20Cribl/#authtype","text":"If connection_type=mssql_jdts_win_auth fill this with configObj else fill with connectionString.","title":"authType"},{"location":"Mapping%20API%20Cribl/#scheduleenabled","text":"Because Splunk talks about disabled and Cribl about enabled the states need to be transformed to the opposite value. Cribl only allows true or false booleans where Splunk allows 0 and 1 numbers as well; these need to be transformed. From To true false false true 1 false 0 true","title":"schedule.enabled"},{"location":"Mapping%20API%20Cribl/#databasetype","text":"Cribl allowed values: mysql, oracle, postgres, sqlserver From To oracle_service oracle oracle oracle mssql_jtds_win_auth sqlserver generic_mssql sqlserver db2 -not supported yet- postgres postgres sybase_ase -not supported yet- vertica -not supported yet- for -not supported yet- throw an error.","title":"databaseType"},{"location":"Mapping%20API%20Cribl/#connectionstring","text":"If available this should be filled with customizedJdbcUrl contents. If not available this needs to be drafted using parameters (in curly brackets) available: jdbc:{connection_type}://{host}:{post};encrypt={jdbcUseSSL};user={username};password={password}; If connection_type=mssql_jdts_win_auth fill configObj in stead of connectionString with the following: { \"authentication\": { \"type\": \"ntlm\", \"options\": { \"userName\": \"{username}\", \"password\": \"{password}\", \"domain\": \"{domain}\" } }, \"options\": { \"connectTimeout\": 15000, \"trustServerCertificate\": true }, \"connectionTimeout\": 15000, \"port\": {port}, \"server\": \"{url}\", \"database\": \"{databasename}\" }","title":"connectionString"},{"location":"TODOS/","text":"TODO list [\u2713] clean up our hardrives and make sure we have enough space to work (it would be way easier to be able to use Docker Desktop) [\u2713] Adjust schemas, create functions, and integrate them into the ingestor class to post the mapped data to the Cribl Input API. [\u2713] Adjust schemas, create functions, and integrate them into the ingestor class to post the mapped data to the Cribl Connections API. [\u2713] research and choose a way to build the python package ( setup.py , poetry, etc.) (https://packaging.python.org/tutorials/packaging-projects/) To build and manage a package, use poetry. Automated environment and dependencies management. Integrated publishing to PyPi. If we want to share a standalone executable that works in any system without having to install pyton, use PyInstaller. [\u2713] make a decision on how we will do unit tests ( pytest , unittest, etc.) [\u2713] make a decision on what documentation we will use ( sphinx , mkdocs, etc.) MkDocs is free and easy to use. It is a static site generator that's geared towards project documentation. It is simple to configure and use, and it is also easy to customize. [\u2713] Error handling and unit tests for the ingestor class. Consider: - [\u2713] environment variables set (right) - [\u2713] connection to Cribl - [\u2713] validation of input files: 3 files, right format - [\u2713] warning if username, password, or domain are missing. - [\u2713] validation of input path and input file names - [\u2713] in each field throw error in case of data type mismatch [\u2713] Make optional parameter to overwrite schedule.enable to false for all [\u2713] write documentation for the ingestor class (make sure your docstrings are good) [\u2713] create a cli (using Typer) that uses the ingestor class to post to the Cribl API [\u2713] create a Dockerfile that uses the cli to post to the Cribl API and publish it to Docker Hub [\u2713] CLI command 'cribl-utilities-cli migrate-database': does the same as the current run-all [\u2713] re structure cli to make command checdk and subcommands in it. Inform user in --help message. Reorganize commands. [\u2713] CLI command 'cribl-utitilies-cli setup': add env variables manually one by one. [\u2713] CLI command 'cribl-utilities-cli check-files': checks if expected files are adhering to YAML linting. Basic syntax validation [\u2713] CLI command 'cribl-utilities-cli check-naming': see docs. Check regex naming convention. [\u2713] Merge to main [\u2713] Debug param to check-naming [\u2713] Change name cribl-utilities-cli to cribl-utilities [\u2713] Make package and publish to PyPi","title":"TODOS"},{"location":"TODOS/#todo-list","text":"[\u2713] clean up our hardrives and make sure we have enough space to work (it would be way easier to be able to use Docker Desktop) [\u2713] Adjust schemas, create functions, and integrate them into the ingestor class to post the mapped data to the Cribl Input API. [\u2713] Adjust schemas, create functions, and integrate them into the ingestor class to post the mapped data to the Cribl Connections API. [\u2713] research and choose a way to build the python package ( setup.py , poetry, etc.) (https://packaging.python.org/tutorials/packaging-projects/) To build and manage a package, use poetry. Automated environment and dependencies management. Integrated publishing to PyPi. If we want to share a standalone executable that works in any system without having to install pyton, use PyInstaller. [\u2713] make a decision on how we will do unit tests ( pytest , unittest, etc.) [\u2713] make a decision on what documentation we will use ( sphinx , mkdocs, etc.) MkDocs is free and easy to use. It is a static site generator that's geared towards project documentation. It is simple to configure and use, and it is also easy to customize. [\u2713] Error handling and unit tests for the ingestor class. Consider: - [\u2713] environment variables set (right) - [\u2713] connection to Cribl - [\u2713] validation of input files: 3 files, right format - [\u2713] warning if username, password, or domain are missing. - [\u2713] validation of input path and input file names - [\u2713] in each field throw error in case of data type mismatch [\u2713] Make optional parameter to overwrite schedule.enable to false for all [\u2713] write documentation for the ingestor class (make sure your docstrings are good) [\u2713] create a cli (using Typer) that uses the ingestor class to post to the Cribl API [\u2713] create a Dockerfile that uses the cli to post to the Cribl API and publish it to Docker Hub [\u2713] CLI command 'cribl-utilities-cli migrate-database': does the same as the current run-all [\u2713] re structure cli to make command checdk and subcommands in it. Inform user in --help message. Reorganize commands. [\u2713] CLI command 'cribl-utitilies-cli setup': add env variables manually one by one. [\u2713] CLI command 'cribl-utilities-cli check-files': checks if expected files are adhering to YAML linting. Basic syntax validation [\u2713] CLI command 'cribl-utilities-cli check-naming': see docs. Check regex naming convention. [\u2713] Merge to main [\u2713] Debug param to check-naming [\u2713] Change name cribl-utilities-cli to cribl-utilities [\u2713] Make package and publish to PyPi","title":"TODO list"},{"location":"cli-docs/","text":"cribl-utilities This is the main command line interface for the cribl-utilities CLI Usage : $ cribl-utilities [OPTIONS] COMMAND [ARGS]... Options : --install-completion : Install completion for the current shell. --show-completion : Show completion for the current shell, to copy it or customize the installation. --help : Show this message and exit. Commands : example-env : Print an example of an environment... setup : Prompt the user for environment variables... print-inputs-config : Load the inputs from the chosen folder and... post-inputs : Post the inputs to the Cribl instance print-connections-config : Load the connections from the examples... post-connections : Post the connections to the Cribl instance migrate-database : Check the environment variables, Cribl... check : Perform various checks related to Cribl... cribl-utilities example-env Print an example of an environment variables file Usage : $ cribl-utilities example-env [OPTIONS] Options : --help : Show this message and exit. cribl-utilities setup Prompt the user for environment variables and save them to a file Usage : $ cribl-utilities setup [OPTIONS] Options : --help : Show this message and exit. cribl-utilities print-inputs-config Load the inputs from the chosen folder and print them folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities print-inputs-config [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit. cribl-utilities post-inputs Post the inputs to the Cribl instance folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the db_inputs.conf file, second file should be the db_connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities post-inputs [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit. cribl-utilities print-connections-config Load the connections from the examples folder and print them folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities print-connections-config [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit. cribl-utilities post-connections Post the connections to the Cribl instance folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities post-connections [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit. cribl-utilities migrate-database Check the environment variables, Cribl health, get the Cribl auth token, load and post inputs and connections, and save the trace to a file folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] save_trace_to_file : bool - If True, saves the trace to a file Usage : $ cribl-utilities migrate-database [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --save-trace-to-file / --no-save-trace-to-file : [default: no-save-trace-to-file] --help : Show this message and exit. cribl-utilities check Perform various checks related to Cribl utilities. Type cribl-utilities check --help to see subcommands Usage : $ cribl-utilities check [OPTIONS] COMMAND [ARGS]... Options : --help : Show this message and exit. Commands : version : Check the version of the cribl-utilities CLI env : Check the environment variables cribl-health : Check the health of the Cribl instance connection : Check the connection to the Cribl instance files : Checks if expected files are adhering to... naming : Check the naming convention of the field... cribl-utilities check version Check the version of the cribl-utilities CLI Usage : $ cribl-utilities check version [OPTIONS] Options : --help : Show this message and exit. cribl-utilities check env Check the environment variables Usage : $ cribl-utilities check env [OPTIONS] Options : --help : Show this message and exit. cribl-utilities check cribl-health Check the health of the Cribl instance Usage : $ cribl-utilities check cribl-health [OPTIONS] Options : --help : Show this message and exit. cribl-utilities check connection Check the connection to the Cribl instance Usage : $ cribl-utilities check connection [OPTIONS] Options : --help : Show this message and exit. cribl-utilities check files Checks if expected files are adhering to YAML linting. Basic syntax validation conf : str - The cribl-config folder where the YAML files are stored Usage : $ cribl-utilities check files [OPTIONS] Options : --conf TEXT : cribl-config folder where the YAML files are stored [required] --help : Show this message and exit. cribl-utilities check naming Check the naming convention of the field in the YAML files Parameters conf : str - The cribl-config folder where the YAML files are stored field : str - Field to check naming convention for in the YAML files regex : str - Regex to check the field against exceptions : list - The fields to exclude from the check debug : bool - Flag to enable debug option Returns Usage : $ cribl-utilities check naming [OPTIONS] Options : --conf TEXT : cribl-config folder where the YAML files are stored [required] --field TEXT : Field to check naming convention for in the YAML files. Options: workergroup, sources, destinations, dataroutes, pipelines, packs. [required] --regex TEXT : Regex to check the field against --exceptions TEXT : List of exceptions to the naming convention --debug / --no-debug : Debug option [default: no-debug] --help : Show this message and exit.","title":"cli-docs"},{"location":"cli-docs/#cribl-utilities","text":"This is the main command line interface for the cribl-utilities CLI Usage : $ cribl-utilities [OPTIONS] COMMAND [ARGS]... Options : --install-completion : Install completion for the current shell. --show-completion : Show completion for the current shell, to copy it or customize the installation. --help : Show this message and exit. Commands : example-env : Print an example of an environment... setup : Prompt the user for environment variables... print-inputs-config : Load the inputs from the chosen folder and... post-inputs : Post the inputs to the Cribl instance print-connections-config : Load the connections from the examples... post-connections : Post the connections to the Cribl instance migrate-database : Check the environment variables, Cribl... check : Perform various checks related to Cribl...","title":"cribl-utilities"},{"location":"cli-docs/#cribl-utilities-example-env","text":"Print an example of an environment variables file Usage : $ cribl-utilities example-env [OPTIONS] Options : --help : Show this message and exit.","title":"cribl-utilities example-env"},{"location":"cli-docs/#cribl-utilities-setup","text":"Prompt the user for environment variables and save them to a file Usage : $ cribl-utilities setup [OPTIONS] Options : --help : Show this message and exit.","title":"cribl-utilities setup"},{"location":"cli-docs/#cribl-utilities-print-inputs-config","text":"Load the inputs from the chosen folder and print them folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities print-inputs-config [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit.","title":"cribl-utilities print-inputs-config"},{"location":"cli-docs/#cribl-utilities-post-inputs","text":"Post the inputs to the Cribl instance folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the db_inputs.conf file, second file should be the db_connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities post-inputs [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit.","title":"cribl-utilities post-inputs"},{"location":"cli-docs/#cribl-utilities-print-connections-config","text":"Load the connections from the examples folder and print them folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities print-connections-config [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit.","title":"cribl-utilities print-connections-config"},{"location":"cli-docs/#cribl-utilities-post-connections","text":"Post the connections to the Cribl instance folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] Usage : $ cribl-utilities post-connections [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --help : Show this message and exit.","title":"cribl-utilities post-connections"},{"location":"cli-docs/#cribl-utilities-migrate-database","text":"Check the environment variables, Cribl health, get the Cribl auth token, load and post inputs and connections, and save the trace to a file folder_name : str - The name of the folder where the inputs are stored file_names : list | None - The names of the files to load (be aware that order matters first file should be the inputs.conf file, second file should be the connections.conf file) If None, defaults to ['db_inputs.conf', 'db_connections.conf'] save_trace_to_file : bool - If True, saves the trace to a file Usage : $ cribl-utilities migrate-database [OPTIONS] FOLDER_NAME Arguments : FOLDER_NAME : [required] Options : --file-names TEXT --save-trace-to-file / --no-save-trace-to-file : [default: no-save-trace-to-file] --help : Show this message and exit.","title":"cribl-utilities migrate-database"},{"location":"cli-docs/#cribl-utilities-check","text":"Perform various checks related to Cribl utilities. Type cribl-utilities check --help to see subcommands Usage : $ cribl-utilities check [OPTIONS] COMMAND [ARGS]... Options : --help : Show this message and exit. Commands : version : Check the version of the cribl-utilities CLI env : Check the environment variables cribl-health : Check the health of the Cribl instance connection : Check the connection to the Cribl instance files : Checks if expected files are adhering to... naming : Check the naming convention of the field...","title":"cribl-utilities check"},{"location":"cli-docs/#cribl-utilities-check-version","text":"Check the version of the cribl-utilities CLI Usage : $ cribl-utilities check version [OPTIONS] Options : --help : Show this message and exit.","title":"cribl-utilities check version"},{"location":"cli-docs/#cribl-utilities-check-env","text":"Check the environment variables Usage : $ cribl-utilities check env [OPTIONS] Options : --help : Show this message and exit.","title":"cribl-utilities check env"},{"location":"cli-docs/#cribl-utilities-check-cribl-health","text":"Check the health of the Cribl instance Usage : $ cribl-utilities check cribl-health [OPTIONS] Options : --help : Show this message and exit.","title":"cribl-utilities check cribl-health"},{"location":"cli-docs/#cribl-utilities-check-connection","text":"Check the connection to the Cribl instance Usage : $ cribl-utilities check connection [OPTIONS] Options : --help : Show this message and exit.","title":"cribl-utilities check connection"},{"location":"cli-docs/#cribl-utilities-check-files","text":"Checks if expected files are adhering to YAML linting. Basic syntax validation conf : str - The cribl-config folder where the YAML files are stored Usage : $ cribl-utilities check files [OPTIONS] Options : --conf TEXT : cribl-config folder where the YAML files are stored [required] --help : Show this message and exit.","title":"cribl-utilities check files"},{"location":"cli-docs/#cribl-utilities-check-naming","text":"Check the naming convention of the field in the YAML files","title":"cribl-utilities check naming"},{"location":"cli-docs/#parameters","text":"conf : str - The cribl-config folder where the YAML files are stored field : str - Field to check naming convention for in the YAML files regex : str - Regex to check the field against exceptions : list - The fields to exclude from the check debug : bool - Flag to enable debug option","title":"Parameters"},{"location":"cli-docs/#returns","text":"Usage : $ cribl-utilities check naming [OPTIONS] Options : --conf TEXT : cribl-config folder where the YAML files are stored [required] --field TEXT : Field to check naming convention for in the YAML files. Options: workergroup, sources, destinations, dataroutes, pipelines, packs. [required] --regex TEXT : Regex to check the field against --exceptions TEXT : List of exceptions to the naming convention --debug / --no-debug : Debug option [default: no-debug] --help : Show this message and exit.","title":"Returns"}]}